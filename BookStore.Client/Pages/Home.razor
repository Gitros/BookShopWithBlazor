@page "/"
@using BookStore.Client.Models
@inject NavigationManager NavigationManager

<PageTitle>Book Catalog</PageTitle>

<h1>Book Catalog</h1>

<div class="row mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary" @onclick="CreateBook">New Book</button>
    </div>
</div>

@if (books is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DeleteBook Book="@currentBook" OnClose="@OnDeleteModalClose">

    </DeleteBook>

    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <th>Id</th>
            <th>Name</th>
            <th>Genre</th>
            <th>Author</th>
            <th>Price</th>
            <th>ReleaseDate</th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var book in books)
            {
                <tr>
                    <td>@book.Id</td>
                    <td>@book.Name</td>
                    <td>@book.Genre</td>
                    <td>@book.Author</td>
                    <td>@book.Price</td>
                    <td>@book.ReleaseDate.ToString("MM/dd/yyyy")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => EditBook(book.Id))">Edit</button>
                        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"
                            @onclick="(() => currentBook = book)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}



@code {

    private Book[]? books;
    private Book? currentBook;

    protected override void OnInitialized()
    {
        books = Bookclient.GetBooks();
    }

    private void CreateBook()
    {
        NavigationManager.NavigateTo("/book");
    }

    private void EditBook(int id)
    {
        NavigationManager.NavigateTo($"/book/{id}");
    }

    private void OnDeleteModalClose(bool accepted)
    {
        if (accepted)
        {
            Bookclient.DeleteBook(currentBook!.Id);
            books = Bookclient.GetBooks();
        }
    }
}
